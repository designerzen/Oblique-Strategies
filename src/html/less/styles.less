//@import url(mixins/3L.less);
#3L {@import 'mixins/3L.less';}
@import url(mixins/b.less);
@import url(mixins/b.menus.less);
@import url(mixins/prefixer.less);

.normalize();
//.reset();



/*

So this is a series of cards that are in a stack
as the page scrolls down, the next card come's into view

It achieves this by fixing position when it hits the top of the screen
and the element 

*/
@light		: rgb(255,255,255);
@dark		: rgb(0,0,0);
@neutral 	: darken( @light, 12% );
@grey		: lighten( @dark, 31.4%  );


@cardPX 	: 40px;
@cardPY 	: 180px;

@cardW 		: 420px;
@cardH 		: 220px;
@gap		: 1px;

@quantity		: 130;
@perspective	: 1200px;

@class-show		: show;
@class-hide		: hide;
@class-flip		: flip;

@class-up		: up;
@class-down		: down;
@class-left		: left;
@class-right	: right;

@z-offset			: 0px;//200px - 100px;
@z-offset-hidden	: @z-offset + 20px ;		// bring forwrd

@import url(typography.less);

html{
	background:@dark url(../img/jpg/seamlesstexture12_500.jpg) repeat top left;
	.size( 100%, 100% );
	max-width:100%;
	max-height:100%;
	overflow:hidden;
}

body{
	.size( auto, 100% );
	color: @neutral;
	
}



header{
	color: @dark;
	.position-tl( 0, 0 );
	.size( 100%, auto );
	z-index:9999;
	.transition (all 1s);
	letter-spacing:3px;
}
header nav{
	color: @light;
	.position-tr( 22px, 22px );
}// Horizontal Nav
header nav{
	.menu(h);
	.visuallyhidden();
}
h1,h2,h3,h4,h5,h6{
	text-transform:uppercase;
	padding-left:22px;
}
small{
	color: @grey;
}



#content{
	.position-tl( 0, 0 );
	.size( 100%, 100% );
	#3L > .vertical-gradient( rgba(0,0,0, 1), rgba(0,0,0, 0.75) );
	visibility:visible;
	opacity:1;
	.transition (all 0.5s);	
}

.loading #content{
	opacity:0;
	visibility:hidden;
}

footer{
	color: @light;
	.position-br( 0, 0 );
	.size( 100%, auto );
	z-index:0;
}
footer small{
	.position-bl( 12px, 0 );
	display:block;
	width:100%;
	text-align:center;
}


// Vertical Nav
footer nav{
	.menu(h);
	ul#external.social{
		.visuallyhidden();
	}
}


header,
#content section h1,
#content section h2,
footer h4, footer h5, footer p, footer nav{
	#3L > .opacity( 1 );
	.transition (all 1);	
}
header,footer h4, footer h5, footer p, footer nav{
	.transition (all 0.5s);	
}

.inactive{
	
	header,
	#content section h1,
	#content section h2,
	footer h4, footer h5, footer p, footer nav{
		#3L > .opacity( 0 );
	}
}



a{
	
	color:@neutral;
	background-color:@dark;
	.transition (all 0.5s);
	.border-radius( 4px );//
	padding:4px 8px;
	&:hover{
		color:@dark;
		background-color:@neutral;
		text-decoration:none;
	}
}


article{
	position:relative;
	.size( 100% );
	display:block;
}
#info{
	visibility:hidden;
	.size( auto );
}
section{
	#3L > .perspective( @perspective );
	//z-index:-1;
	.size( 100% );
	z-index:66;
}

header h1{
	//.position-tl( 0, 0 );
	//.3D-text( @neutral, 2px );
}
header h2{
	//.position-br( 0, 0 );
	//.3D-text( @neutral, 2px );
}

section h1{
	.position-tl( 0, 0 );
	font-size:60%;
	color:rgba( 255,255,255,0.6);
}
section h2{
	.position-br( 8px, 22px );
	font-size:50%;
	color:rgba( 255,255,255,0.5);
}

article.info{
	visibility:hidden;
}


// Stack of cards
ul.cards{
	position:relative;
	
	// Make it fit 
	.size( @cardW, @cardH );
	
	// table breaks ff ;(
	//display: table; 
	display:block;
	display: table-cell;
    vertical-align: middle;
	
	//.centralize();
	.centralise-element();
	
	.centralise-datum( @cardW, @cardH );
	//margin-top: 220px ;
	
	#3L > .transform-style( preserve-3d);
	#3L > .transform-origin( 50% 50% );
	#3L > .backface-visibility( hidden);
	
	//z-index:99;
	//.translateZ( -100px );	// move it back a bit for nicer spin effect
	.translateZ( 0 );	// move it back a bit for nicer spin effect
	
	// shadow
	//.border-radius( 12px );
	//background-color:@dark;
	//#3L > .box-shadow(5px 5px 12px 4px @dark );

	// Each individual card
	li{
		//.backface-visibility( hidden );
		#3L > .backface-visibility( hidden );
		#3L > .transform-origin( 50% 50% );
		
		.size( @cardW - @cardPX , @cardH - @cardPY );
		
		//.border( @dark, 1px, solid );
		border-width:1px;
		border-style:outset;
		border-bottom-color:@dark;
		border-top-color:@neutral;
		border-left-color:@grey;
		.border-radius( 12px );
		
		.position-tl( 0, 0 );
		//.position-tl( @cardH/2, @cardW/2 );
		//.margins-tl( -( @cardW - @cardPX ) / 2 , -( @cardH - @cardPY ) / 2 );
		padding: (@cardPY/2) (@cardPX/2);
		color:@dark;
		
		
		//background:@light url(../img/jpg/seamlesstexture29_500.jpg) repeat top left;
		background-color:@light;
			//background-image: url(../img/jpg/seamlesstexture1_500.jpg), url(../img/jpg/seamlesstexture29_500.jpg);
		//background-image: url(../img/jpg/seamlesstexture29_500.jpg), url(../img/jpg/seamlesstexture3_500.jpg);
		//background-repeat: repeat;
		#3L > .vertical-gradient( @light, @neutral );
		#3L > .opacity(1);
		
		// set text to be centralised vertically
		//display: block; 
		display: table-cell; 
		vertical-align: middle; 
		text-align: center;
		user-select:none;
		
		cursor: pointer;
		-webkit-font-smoothing: antialiased;
		-webkit-user-drag: none;	
		.user-selectable( none );
		.transition (all 1s);
	}

	// This is the relaod card!
	li.reload{
		a{
			display:block;
			width:100%;
			height:100%;
		}
	}

}
// let us add a reverse face to the card :)
//ul.cards li:after
/*
ul.cards li:after{
	content: " ";
	.backface-visibility( hidden );
	//background-color:@dark;
	#3L > .vertical-gradient( @neutral, @dark );////
	display:block;
	//.transform( translate3d( 0, 0, -3px ) );
	.transform( rotate3d( 180deg, 45deg, 45deg ) );
	//.transform( translate3d( 0, 0, 2px ) rotate3d( 180deg, 0, 0  ) );rotate3d( 180deg, 0, 0  ) 
	.position-tl( 0 );
}

*/
//@random	: ~'(function(){ return Math.random(); ))';
@random	: 1.1;

// Global Loop Styles
.looper( @_ ; @n ){
	
}

// Here we define our individual loop mixins
// card at index @n 
.looper( show; @n ){
	&:nth-child(@{n}) 
	{
        //z-index:(999 - @n);
		//.translateZ( @n * 1px );
		.translate3d( 0, 0, @z-offset - (@n * @gap) );
		//.transform( translate3d( 0, 0, -@n * @gap ) );/rotateX(@n+0deg)
	}	
}



.child( show; @n ){
	z-index:-@n;	// needed for ff
	.translate3d( 0, 0, @z-offset - (@n * @gap) );
	//.transform( translate3d( 0, 0, -@n * @gap ) );/rotateX(@n+0deg)
}

// card at index @n 
.child( hide; @n ){
   //.translate3d( @cardW + @cardPX, 0, @z-offset - (@n * @gap) + 400 );
	@rotation : 90deg;
	#3L > .transform( translate3d( 0, 2 * @cardH + 10, @z-offset-hidden - (@n * @gap) ), rotateX( @rotation ) );
} 

// card at index @n 
.child( flip; @n ){
   // z-index:(-2);
	//.translateZ( @n * 1px );
	//.translate3d( @cardW + @cardPX, 0, @z-offset - (@n * @gap) + 400 );
	@rotation : 90deg;
	#3L > .transform( translate3d( 0, 2 * @cardH + 10, @z-offset-hidden - (@n * @gap) ), rotateX( @rotation ) );
} 

// card at index @n 
.child( up; @n ){
	@rotation : 90deg * @random;
	#3L > .transform( translate3d( 0, -4 * @cardH - 10, @z-offset-hidden - (@n * @gap) ), rotateX( -@rotation) );
} 
// card at index @n 
.child( down; @n ){
	@rotation : 90deg * @random;
	#3L > .transform( translate3d( 0, 4 * @cardH + 10, @z-offset-hidden - (@n * @gap) ), rotateX( @rotation ) );
} 

// card at index @n 
.child( left; @n ){
	@rotation : 90deg * @random;
	#3L > .transform( translate3d( -2 * @cardW + 10, 0, @z-offset-hidden - (@n * @gap) ), rotateY( -@rotation ) );
} 
// card at index @n 
.child( right; @n ){
	@rotation : 90deg * @random;
	#3L > .transform( translate3d( 2 * @cardW + 10, 0, @z-offset-hidden - (@n * @gap)  ), rotateY( @rotation ) );
} 


// card at index @n 
.loop-children( @name; @from:0; @to:1) when (@from < @to ){
	&:nth-child(@{from}) {   .child( @name, @from );	}
	.loop-children( @name,(@from + 1) , @to );	// self iterating... next iteration
} 


// This will call the mixin "name"
.loop-up (@name; @from:0; @to:1) when (@from < @to) {
	.looper( @name, @from );
	.loop-up( @name, @from + 1 , @to );	// self iterating... next iteration
}

.loop-down (@name; @from:1;@to:0) when (@from > @to) {
	.looper( @name, @from );
	.loop-down( @name, @from - 1 , @to );	// self iterating... next iteration
}

// Shortcuts
.loop ( @name; @from:0; @to:1 ) {			.loop-up( @name, @from, @to ); }
.loop ( @name, @from:0; @to:1; up )  {		.loop-up( @name, @from, @to ); }
.loop ( @name, @from:0; @to:1; down )  {	.loop-down( @name, @from, @to ); }

/* Cards in the Deck in Sequence ---------------- */

// Each Card
ul.cards li{
	.loop-children( @class-show, 0, @quantity );	// loop through each child!
}

// Hide the card by animating out of the deck
ul.cards li.hide{
	.loop-children( @class-hide, 0, @quantity );		// loop through each child!
}

// Flip the card over to show the reverse
ul.cards li.flip{
	.loop-children( @class-flip, 0, @quantity );	// loop through each child!
}

ul.cards li.hide-left{
	.loop-children( @class-left, 0, @quantity );	// loop through each child!
}

ul.cards li.hide-right{
	.loop-children( @class-right, 0, @quantity );	// loop through each child!
}

ul.cards li.hide-up{
	.loop-children( @class-up, 0, @quantity );	// loop through each child!
}

ul.cards li.hide-down{
	.loop-children( @class-down, 0, @quantity );	// loop through each child!
}


// ----------------------------------------------------- 

ul.cards li.reload a::after {
	//.icon("\e001");
}

ul.cards li.hide,
ul.cards li.hide-left,
ul.cards li.hide-right,
ul.cards li.hide-up,
ul.cards li.hide-down{
	cursor:auto;
	.opacity(0);
}



.icon( @glyph:' ' ){
	font-family: 'icomoon';
	content: attr(data-icon);
	speak: none;
	font-weight: normal;
	font-variant: normal;
	text-transform: none;
	line-height: 1;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
	content: @glyph;
	margin-right:1em;
	//color:@dark;
	//background-color:@neutral;
	
}

.twitter::before {
	.icon("\e013");
}

.facebook::before {
	.icon("\e021");
}

.google-plus::before {
	.icon("\e022");
}
.info::before{
	.icon("\e02f");
}
.info:hover::before{
	content: "\e02e";
}
.twitter, .facebook, .google-plus{
	//.visuallyhidden();
	width:1em;
	padding:6px 8px;
	.border-radius( 24px );
	overflow:hidden;
}