// let us add a reverse face to the card :)

@import url(mixins/cards.nth.less);

// Stack of cards ul
.cards{
	// Make it fit our cards
	width:@cardW;
	height:@cardH;

	// table breaks ff ;(
	//display: table;
	display:block;
	//display: table-cell;
  vertical-align: middle;

	cursor: pointer;

	position: absolute;
	top:50%;
	left:50%;
	margin-left: -@cardW / 2;
	margin-top: -@cardH / 2;

	// presumably needed to maintain 3d stack but not neccessarily so...
	transform-style: preserve-3d;
	transform-origin: 50% 50% ;
	backface-visibility: hidden;

	//z-index:99;
	//.translateZ( -100px );	// move it back a bit for nicer spin effect

	// move it back a bit for nicer spin effect
	transform:translateZ(0);
	// shadow
	//.border-radius( 12px );
	//background-color:@dark;
	//#3L > .box-shadow(5px 5px 12px 4px @dark );

	// Each individual card li
	.card{
		//.backface-visibility( hidden );
		backface-visibility: hidden ;
		transform-origin: 50% 50% ;
		box-sizing: border-box;

		width: @cardW ;//- @cardPX;
		height: @cardH;// - @cardPY;

		//.border( @dark, 1px, solid );
		border-width:1px;
		border-style:outset;
		border-bottom-color:@dark;
		border-top-color:@neutral;
		border-left-color:@grey;
		border-radius: 12px;

		position: absolute;
		top:0;
		left:0;

		padding: (@cardPY/2) (@cardPX/2);
		//padding: 0 (@cardPX/2);
		color:@dark;


		//background:@light url(../img/jpg/seamlesstexture29_500.jpg) repeat top left;
		background-color:@light;
		opacity:1;

		// set text to be centralised vertically
		//display: block;
		display: table-cell;
		vertical-align: middle;

		display: flex;
    justify-content: center;
    align-items: center;

		text-align: center;
		user-select:none;

		cursor: pointer;

		-webkit-font-smoothing: antialiased;
		-webkit-user-drag: none;
		transition :transform 1s ease-out, opacity 1.2s linear;

	}

	// This is the relaod card!
	.card-1{

		a#shuffle{
			user-select:none;
			display: flex;
	    justify-content: center;
	    align-items: center;
			border-radius: 9px;
			width:100%;
			height:100%;
		}

		// ul
		.more{
			position: absolute;
			z-index: 1;
			height:25%;
			bottom: (@cardPY/2) * 1px;
			left:(@cardPX/2) * 1px;
			right:(@cardPX/2) * 1px;

			padding:0;
			margin:0;
			//li
			.deck{
				display: inline-block;
				vertical-align: bottom;
				a{

				}
			}
		}
	}

}



.child( show; @n ){
	z-index:-@n;	// needed for ff
	transform:translate3d( 0, 0, @z-offset - (@n * @gap) );
	//.transform( translate3d( 0, 0, -@n * @gap ) );/rotateX(@n+0deg)
}

// card at index @n
.child( hide; @n ){
   //transform:translate3d( @cardW + @cardPX, 0, @z-offset - (@n * @gap) + 400 );
	@rotation : 90deg;
	transform: translate3d( 0, 2 * @cardH + 10, @z-offset-hidden - (@n * @gap) ) rotateX( @rotation );
}

// card at index @n
.child( flip; @n ){
   // z-index:(-2);
	//.translateZ( @n * 1px );
	//transform:translate3d( @cardW + @cardPX, 0, @z-offset - (@n * @gap) + 400 );
	@rotation : 90deg;
	transform:translate3d( 0, 2 * @cardH + 10, @z-offset-hidden - (@n * @gap) ) rotateX( @rotation );
}

// card at index @n
.child( up; @n ){
	@rotation : 90deg * @random;
	transform:translate3d( 0, -4 * @cardH - 10, @z-offset-hidden - (@n * @gap) ) rotateX( -@rotation);
}
// card at index @n
.child( down; @n ){
	@rotation : 90deg * @random;
	transform:translate3d( 0, 4 * @cardH + 10, @z-offset-hidden - (@n * @gap) ) rotateX( @rotation );
}

// card at index @n
.child( left; @n ){
	@rotation : 90deg * @random;
	transform:translate3d( -2 * @cardW + 10, 0, @z-offset-hidden - (@n * @gap) ) rotateY( -@rotation );
}
// card at index @n
.child( right; @n ){
	@rotation : 90deg * @random;
	transform:translate3d( 2 * @cardW + 10, 0, @z-offset-hidden - (@n * @gap)  ) rotateY( @rotation );
}


/* Cards in the Deck in Sequence ---------------- */

// Each Card
ul.cards li{
	.loop-children( @class-show, 0, @quantity );	// loop through each child!
}

// Hide the card by animating out of the deck
ul.cards li.hide{
	.loop-children( @class-hide, 0, @quantity );		// loop through each child!
}

// Flip the card over to show the reverse
ul.cards li.flip{
	.loop-children( @class-flip, 0, @quantity );	// loop through each child!
}

ul.cards li.hide-left{
	.loop-children( @class-left, 0, @quantity );	// loop through each child!
}

ul.cards li.hide-right{
	.loop-children( @class-right, 0, @quantity );	// loop through each child!
}

ul.cards li.hide-up{
	.loop-children( @class-up, 0, @quantity );	// loop through each child!
}

ul.cards li.hide-down{
	.loop-children( @class-down, 0, @quantity );	// loop through each child!
}

// -----------------------------------------------------

ul.cards li.hide,
ul.cards li.hide-left,
ul.cards li.hide-right,
ul.cards li.hide-up,
ul.cards li.hide-down{
	cursor:auto;
	opacity:0;
}
